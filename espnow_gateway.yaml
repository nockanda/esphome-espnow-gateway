esphome:
  name: test
  includes:
    - nockanda_espnow.h
    
esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "785b3a817e1f6069b8b1ce4a8677670b"

sensor:
  - platform: template
    name: "MYROOM1 TEMP"
    id: myroom1_temp
  - platform: template
    name: "MYROOM1 HUMI"
    id: myroom1_humi
  - platform: template
    name: "MYROOM2 TEMP"
    id: myroom2_temp
  - platform: template
    name: "MYROOM2 HUMI"
    id: myroom2_humi
  - platform: template
    name: "MYROOM3 TEMP"
    id: myroom3_temp
  - platform: template
    name: "MYROOM3 HUMI"
    id: myroom3_humi

button:
  - platform: template
    name: "myroom1 on sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(1,'0');
  - platform: template
    name: "myroom1 off sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(1,'1');
  - platform: template
    name: "myroom2 on sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(2,'0');
  - platform: template
    name: "myroom2 off sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(2,'1');
  - platform: template
    name: "myroom3 on sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(3,'0');
  - platform: template
    name: "myroom3 off sw"
    on_press:
      - lambda: |-
          NOCKANDA_ESPNOW.send_data(3,'1');

custom_component:
- lambda: |-
    NOCKANDA_ESPNOW.begin();
    NOCKANDA_ESPNOW.set_recv_callback([](int myid, float temp, float humi){
      if(myid == 1){
         id(myroom1_temp).publish_state(temp);
         id(myroom1_humi).publish_state(humi);
      }else if(myid == 2){
         id(myroom2_temp).publish_state(temp);
         id(myroom2_humi).publish_state(humi);
      }else if(myid == 3){
         id(myroom3_temp).publish_state(temp);
         id(myroom3_humi).publish_state(humi);
      }
    });
    return {};


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Test Fallback Hotspot"
    password: "SNsLdWWwM4jh"

captive_portal:
    